// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`0a000c00000100000100000100000000010000010000010000000000000001000001010001000001000001000001000001000100000000000100000000010001010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002020202020202020202`, img`
. 2 . . 2 . . 2 . . 
. . 2 . . 2 . . 2 . 
. . . . . . 2 . . 2 
2 . 2 . . 2 . . 2 . 
. 2 . . 2 . 2 . . . 
. . 2 . . . . 2 . 2 
2 . . 2 . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.dungeon.hazardLava0], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`0a000c00020000020000020000000002000002000002000002000200000200000000000200020000010101000000020002000000000001010100000200000000020000000000020000000002000000000002000000000101010100000200000000000000000000020000000000000000000003030303030303030303`, img`
2 . . 2 . . 2 . . . 
. 2 . . 2 . . 2 . . 
2 . 2 . . 2 . . . . 
. 2 . 2 . . 2 2 2 . 
. . 2 . 2 . . . . . 
2 2 2 . . 2 . . . . 
2 . . . . . 2 . . . 
. 2 . . . . . 2 . . 
. . 2 2 2 2 . . 2 . 
. . . . . . . . . 2 
. . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.dungeon.floorLight2,sprites.dungeon.hazardLava0], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
